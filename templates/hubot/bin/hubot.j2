#!/bin/sh

set -e

export max_stop_wait_time=30

{% if hubot_adapter == "slack" %}
export HUBOT_SLACK_TOKEN={{ hubot_slack_token }}
{% endif %}

export PATH="node_modules/.bin:node_modules/hubot/node_modules/.bin:$PATH"
export pid_file="{{ hubot_home }}/var/hubot.pid"

function help() {
  echo "${0}: [start|stop|restart|status]"
  echo ""
  exit 1
}

function start() {
  echo "Installing {{ hubot_name }}..."
  npm install 1>> "{{ hubot_home }}/logs/hubot.out" 2>> "{{ hubot_home }}/logs/hubot.err"

  echo "Starting {{ hubot_name }}..."
  echo "$(date +%Y-%m-%d\ %H:%M:%S) - Starting Hubot" 1>> "{{ hubot_home }}/logs/hubot.out"
  exec node_modules/.bin/hubot --name "{{ hubot_name }}" --adapter "{{ hubot_adapter }}" "$@" 1>> "{{ hubot_home }}/logs/hubot.out" 2>> "{{ hubot_home }}/logs/hubot.err" &
  echo $! > "${pid_file}"

  if [[ status -eq 0 ]]; then
    echo "Started {{ hubot_name }}"
    exit 0
  else
    echo "ERROR: Unable to start {{ hubot_name }}"
    exit 1
  fi
}

function stop() {
  count=0
  while [[ -f "${pid_file}" ]] && [[ ${count} -lt ${max_stop_wait_time} ]]; do
    echo "Stopping {{ hubot_name }}..."
    if [[ status -ne 0 ]]; then
      kill $(cat "${pid_file}")
    else
      rm ${pid_file}
    fi
    count=$((${count} + 1))
    sleep 1
  done

  if [[ status -eq 0 ]]; then
    echo "Stopped {{ hubot_name }}"
    exit 0
  else
    echo "ERROR: Unable to stop {{ hubot_name }}"
    exit 1
  fi
}

function status() {
  if [[ -f "${pid_file}" ]]; then
    pid_val=$(cat "${pid_file}")
    pid_test=$(ps -ef | grep ${pid_val} | wc -l)

    if [[ ${pid_test} -gt 0 ]]; then
      echo "{{ hubot_name }} running under PID ${pid_val}"
      exit 1
    fi

  fi

  echo "{{ hubot_name }} not running"
  exit 0
}

case ${1} in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload)
    ret=$(stop)
    if [[ ${ret} -eq 0 ]]; then
      start
    fi
    ;;
  status)
    status
    ;;
  *)
    help
    ;;
esac
